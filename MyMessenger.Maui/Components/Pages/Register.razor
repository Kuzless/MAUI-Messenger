@page "/register"
@using Microsoft.AspNetCore.Components.Forms
@using MyMessenger.Maui.Services
@inject AuthService authService

<div class="auth-container">
    <h3>Sign Up</h3>
    @if (IsLoaded)
    {
        <InputText type="text" class="@((string.IsNullOrWhiteSpace(Name) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your name" @bind-Value="@Name"></InputText>
        <br>
        <InputText type="text" class="@((string.IsNullOrWhiteSpace(Username) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your username" @bind-Value="@Username"></InputText>
        <br>
        <InputText type="text" class="@((string.IsNullOrWhiteSpace(Email) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your email" @bind-Value="@Email"></InputText>
        <br>
        <InputText type="text" class="@((string.IsNullOrWhiteSpace(Password) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your password" @bind-Value="@Password" isPassword="true"></InputText>
        <br>
        <button type="button" class="btn-primary" style="width: 350px" title="Sign Up" @onclick="SignUp">Sign Up</button>
        @if (SignUpAttempted)
        {
            @if (SignUpSuccessfully)
            {
                <p>Sign-up successful!</p>
            }
            else
            {
                <p>An error occurred during sign-up.<br>Please try again.</p>
            }
        }
    }
    else
    {
        <br>
        <h3>Loading...</h3>
    }
</div>


@code {
    private string Name { get; set; }
    private string Username { get; set; }
    private string Email { get; set; }
    private string Password { get; set; }
    private bool SignUpSuccessfully { get; set; } = true;
    private bool SignUpClicked { get; set; } = false;
    private bool SignUpAttempted { get; set; } = false;
    private bool IsLoaded { get; set; } = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        IsLoaded = true;
    }

    private async Task SignUp()
    {
        SignUpClicked = true;
        if (!string.IsNullOrEmpty(Name) && !string.IsNullOrEmpty(Username) && !string.IsNullOrEmpty(Email) && !string.IsNullOrEmpty(Password))
        {
            SignUpSuccessfully = await authService.SignUp(Name, Username, Email, Password);
            SignUpAttempted = true;
        }
    }
}