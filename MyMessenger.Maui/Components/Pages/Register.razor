@page "/register"
@using Microsoft.AspNetCore.Components.Forms
@using MyMessenger.Maui.Services
@inject AuthService authService

<div class="flex-center" style="min-height: 80vh;">
    <div class="card" style="width: 370px;">
        <h2 class="text-accent" style="margin-bottom:1.5rem;">Sign Up</h2>
        @if (IsLoaded)
        {
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Name) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your name" @bind-Value="@Name"></InputText>
            <br>
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Username) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your username" @bind-Value="@Username"></InputText>
            <br>
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Email) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your email" @bind-Value="@Email"></InputText>
            <br>
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Password) && SignUpClicked ? "element auth-required" : "element"))" placeholder="Enter your password" @bind-Value="@Password" isPassword="true"></InputText>
            <br>
            <button type="button" class="btn-main" style="width: 100%;" title="Sign Up" @onclick="SignUp">Sign Up</button>
            @if (SignUpAttempted)
            {
                @if (SignUpSuccessfully)
                {
                    <p class="muted" style="margin-top:1rem;">Sign-up successful!</p>
                }
                else
                {
                    <p class="muted" style="margin-top:1rem;">An error occurred during sign-up.<br>Please try again.</p>
                }
            }
        }
        else
        {
            <br>
            <h3 class="muted">Loading...</h3>
        }
    </div>
</div>


@code {
    private string Name { get; set; }
    private string Username { get; set; }
    private string Email { get; set; }
    private string Password { get; set; }
    private bool SignUpSuccessfully { get; set; } = true;
    private bool SignUpClicked { get; set; } = false;
    private bool SignUpAttempted { get; set; } = false;
    private bool IsLoaded { get; set; } = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        IsLoaded = true;
    }

    private async Task SignUp()
    {
        SignUpClicked = true;
        if (!string.IsNullOrEmpty(Name) && !string.IsNullOrEmpty(Username) && !string.IsNullOrEmpty(Email) && !string.IsNullOrEmpty(Password))
        {
            SignUpSuccessfully = await authService.SignUp(Name, Username, Email, Password);
            SignUpAttempted = true;
        }
    }
}