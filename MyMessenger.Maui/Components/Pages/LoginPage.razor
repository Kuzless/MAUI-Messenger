@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using MyMessenger.Maui.Services
@inject AuthService authService
@inject NavigationManager NavigationManager

<div class="flex-center" style="min-height: 80vh;">
    <div class="card" style="width: 370px;">
        @if (IsLoaded)
        {
            <h2 class="text-accent" style="margin-bottom:1.5rem;">Login</h2>
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Email) && ButtonClicked ? "element auth-required" : "element"))" placeholder="Enter your email" @bind-Value="@Email"></InputText>
            <br>
            <InputText type="text" class="@((string.IsNullOrWhiteSpace(Password) && ButtonClicked ? "element auth-required" : "element"))" placeholder="Enter your password" @bind-Value="@Password" isPassword="true"></InputText>
            <br>
            <button type="submit" class="btn-main" style="width: 100%;" title="Login" @onclick="Login">Login</button>
            @if (!LoginSuccessfully)
            {
                <p class="muted" style="margin-top:1rem;">An error occurred.<br>Please recheck your credentials.</p>
            }
        }
        else
        {
            <br>
            <h3 class="muted">Loading...</h3>
        }
    </div>
</div>



@code {
    private string Email { get; set; }
    private string Password { get; set; }
    private bool IsLoaded { get; set; } = false;
    private bool ButtonClicked { get; set; } = false;
    private bool LoginSuccessfully { get; set; } = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        IsLoaded = true;
    }
    private async Task Login() 
    {
        ButtonClicked = true;
        if (!string.IsNullOrEmpty(Email) && !string.IsNullOrEmpty(Password))
        {
            LoginSuccessfully = await authService.Login(Email, Password);
            if (LoginSuccessfully)
            {
                NavigationManager.NavigateTo("/users");
            }
        }
    }
}
