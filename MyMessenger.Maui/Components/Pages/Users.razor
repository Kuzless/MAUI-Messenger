@page "/users"
@using MyMessenger.Application.DTO.UserDTOs
@using MyMessenger.Application.DTO
@using MyMessenger.Maui.Services
@using MyMessenger.Maui.Components.Pages.ParametersPages
@using BlazorPagination
@using MyMessenger.Maui.Services.PageService
@inject UserService userService

<h1>Users</h1>
@if (IsLoaded) {
    <button @onclick="userPageService.OpenPopup">Parameters</button>

    <SfGrid DataSource="@userPageService.UsersList">
        <GridColumns>
            <GridColumn Field="@nameof(UserDTO.Name)" HeaderText="Name"></GridColumn>
            <GridColumn Field="@nameof(UserDTO.UserName)" HeaderText="UserName"></GridColumn>
            <GridColumn Field="@nameof(UserDTO.Email)" HeaderText="Email"></GridColumn>
            <GridColumn Field="@nameof(UserDTO.PhoneNumber)" HeaderText="Phone"></GridColumn>
        </GridColumns>
    </SfGrid>
    <BlazorPager CurrentPage="@userPageService.currentPage"
                 PageCount="@userPageService.numberOfPages"
                 OnPageChanged="(async x => { userPageService.currentPage = x; userPageService.ChangePage(); })"
                 ShowFirstLast="false"
                 ShowPageNumbers="true"
                 VisiblePages=userPageService.pageSize />

    if (userPageService.isWindowVisible)
    {
        <GenericParameters Columns="@userPageService.Columns" CurrentPage="@userPageService.CurrentPage" OnSave="@userPageService.SaveChanges" OnClose="@userPageService.ClosePopup"></GenericParameters>
    }
} 
else {
    <br>
    <h3>Loading...</h3>
}

@code {
    [Inject] private UserPageService userPageService { get; set; }
    private bool IsLoaded { get; set; } = false;

    protected override void OnInitialized()
    {
        userPageService.OnDataChanged += Refresh;
        base.OnInitialized();
        IsLoaded = true;
    }
    private void Refresh()
    {
        StateHasChanged();
    }

}
