@using MyMessenger.Maui.Models
<div class="parameters">
    <div class="content">
        <div class="search-bar">
            <h3>Search</h3>
            <input type="text" @bind="CurrentPage.Subs" placeholder="Search..." />
        </div>
        <h3>Sort</h3>
        <div class="dropdown">
            <select @onchange="(e) => SortByColumn(e)">
                @foreach (var column in Columns)
                {
                    <option value="@column">@column</option>
                }
            </select>
        </div>
        <br />
        <div class="radio-group2">
            <input type="radio" id="radio11" name="radioGroup2" checked="true" value="value1" @onclick="() => { SortType = false; ChangeSortType(); }" />
            <label for="radio11">Asc</label>
            <input type="radio" id="radio22" name="radioGroup2" value="value2" @onclick="() => { SortType = true; ChangeSortType(); }" />
            <label for="radio22">Desc</label>
        </div>
        <br />
        <button @onclick="SaveAndClose">Apply</button>
        <button @onclick="ClosePopup">Close</button>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }
    [Parameter]
    public EventCallback<string> OnSave { get; set; }
    [Parameter]
    public AllDataRetrievalParametersDTO CurrentPage { get; set; }
    [Parameter]
    public List<string> Columns { get; set; }

    private bool SortType;
    private string SelectedColumn;
    private Dictionary<string, bool> Sort = new Dictionary<string, bool>();
    private string Subs;

    protected override void OnInitialized()
    {
        SortType = false;
        Sort.Add(Columns[0], SortType);
        SelectedColumn = Columns[0];
        Sort = new Dictionary<string, bool>() { { Columns[0], SortType } };
        base.OnInitialized();
    }
    private void SaveAndClose()
    {
        CurrentPage.Sort = Sort;
        OnSave.InvokeAsync();
        ClosePopup();
    }
    private void ClosePopup()
    {
        OnClose.InvokeAsync();
    }
    private void SortByColumn(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        SelectedColumn = e.Value.ToString();
        Sort.Clear();
        Sort.Add(SelectedColumn, SortType);
    }
    private void ChangeSortType()
    {
        var sortRule = Sort.First();
        Sort[sortRule.Key] = SortType;
    }
}
