@page "/chatmessages/{id}"
@using MyMessenger.Application.DTO.MessagesDTOs
@using MyMessenger.Application.DTO
@using Microsoft.AspNetCore.SignalR.Client
@using MyMessenger.Maui.Services
@using MyMessenger.Maui.Services.PageService
@using MyMessenger.Maui.Services.SignalR

@inject SignalRMessageService chatHubService
@inject MessageService messageService

<h1>Messages</h1>
@if (IsLoaded)
{
    <SfGrid DataSource="@chatMessagePageService.MessagesList" @ref="chatMessagePageService.grid">
        <GridColumns>
            <GridColumn Field="@nameof(MessageDTO.Name)" HeaderText="Sender"></GridColumn>
            <GridColumn Field="@nameof(MessageDTO.Text)" HeaderText="Message"></GridColumn>
            <GridColumn Field="@nameof(MessageDTO.DateTime)" HeaderText="Time"></GridColumn>
            <GridColumn>
                <Template>
                    <button @onclick="() => chatMessagePageService.ShowUpdateMessage(((MessageDTO)context))">Update</button>
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>

    <button @onclick="chatMessagePageService.ChangeAddMessageVisibility">Add</button>

    @if (chatMessagePageService.showAddMenu)
    {
        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: grey; padding: 20px; border-block-color: black;">
            <label for="chatName">Text:</label>
            <input type="text" id="messageText" @bind="chatMessagePageService.newMessage" required />
            <div style="margin-top: 10px;">
                <button @onclick="chatMessagePageService.AddMessage">Save</button>
            </div>
        </div>
    }
    @if (chatMessagePageService.showUpdateMenu)
    {
        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: grey; padding: 20px; border-block-color: black;">
            <label for="chatName">Text:</label>
            <input type="text" id="newUpdateMessageText" @bind="chatMessagePageService.newUpdateMessageText" required />
            <div style="margin-top: 10px;">
                <button @onclick="chatMessagePageService.UpdateMessage">Update</button>
                <button @onclick="chatMessagePageService.CloseUpdateMessage">Close</button>
            </div>
        </div>
    }
}
else
{
    <br>
    <h3>Loading...</h3>
}

@code {
    [Parameter]
    public string id { get; set; }
    [Inject] 
    private ChatMessagePageService chatMessagePageService { get; set; }
    private bool IsLoaded { get; set; } = false;

    protected override async void OnInitialized()
    {
        chatMessagePageService.OnDataChanged += Refresh;
        await chatMessagePageService.EstablishConnection(id);
        base.OnInitialized();
        IsLoaded = true;
        Refresh();
    }
    private void Refresh()
    {
        StateHasChanged();
    }
}