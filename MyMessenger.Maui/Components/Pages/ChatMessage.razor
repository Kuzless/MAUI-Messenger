@page "/chatmessages/{id}"
@using MyMessenger.Maui.Models
@using Microsoft.AspNetCore.SignalR.Client
@using MyMessenger.Maui.Services
@using MyMessenger.Maui.Services.PageService
@using MyMessenger.Maui.Services.SignalR

@inject SignalRMessageService chatHubService
@inject MessageService messageService

<div class="card" style="margin-top:2rem;">
    <h1 class="text-accent">Messages</h1>
    @if (IsLoaded)
    {
        <SfGrid DataSource="@chatMessagePageService.MessagesList" @ref="chatMessagePageService.grid">
            <GridColumns>
                <GridColumn Field="@nameof(MessageDTO.Name)" HeaderText="Sender"></GridColumn>
                <GridColumn Field="@nameof(MessageDTO.Text)" HeaderText="Message"></GridColumn>
                <GridColumn Field="@nameof(MessageDTO.DateTime)" HeaderText="Time"></GridColumn>
                <GridColumn>
                    <Template>
                        <button class="btn-main" @onclick="() => chatMessagePageService.ShowUpdateMessage(((MessageDTO)context))">Update</button>
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>

        <div style="display:flex;justify-content:flex-end;gap:1rem;">
            <button class="btn-main" style="width:180px;margin-top:1rem;" @onclick="chatMessagePageService.ChangeAddMessageVisibility">New</button>
            <button class="btn-main" style="width:180px;margin-top:1rem;" @onclick="OpenCallModal">Call</button>
        </div>

        @if (chatMessagePageService.showAddMenu)
        {
            <div style="position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:9999;background:rgba(0,0,0,0.5);display:flex;align-items:center;justify-content:center;">
                <div class="card flex-center" style="position:relative;min-width:320px;">
                    <button @onclick="chatMessagePageService.ChangeAddMessageVisibility" style="position:absolute;top:1rem;right:1rem;background:none;border:none;font-size:2rem;line-height:1;color:#888;cursor:pointer;z-index:1001;">×</button>
                    <div style="width:100%;text-align:center;">
                        <label for="chatName">Text:</label>
                        <input type="text" id="messageText" @bind="chatMessagePageService.newMessage" required style="width:100%;margin-bottom:1rem;" />
                        <div class="flex-center" style="margin-top: 10px;">
                            <button class="btn-main" @onclick="chatMessagePageService.AddMessage">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (chatMessagePageService.showUpdateMenu)
        {
            <div style="position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:9999;background:rgba(0,0,0,0.5);display:flex;align-items:center;justify-content:center;">
                <div class="card flex-center" style="position:relative;min-width:320px;">
                    <button @onclick="chatMessagePageService.CloseUpdateMessage" style="position:absolute;top:1rem;right:1rem;background:none;border:none;font-size:2rem;line-height:1;color:#888;cursor:pointer;z-index:1001;">×</button>
                    <div style="width:100%;text-align:center;">
                        <label for="chatName">Text:</label>
                        <input type="text" id="newUpdateMessageText" @bind="chatMessagePageService.newUpdateMessageText" required style="width:100%;margin-bottom:1rem;" />
                        <div class="flex-center" style="margin-top: 10px;gap:1rem;">
                            <button class="btn-main" @onclick="chatMessagePageService.UpdateMessage">Update</button>
                            <button class="btn-main" @onclick="chatMessagePageService.CloseUpdateMessage">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <br>
        <h3 class="muted">Loading...</h3>
    }
</div>

@if (showCallModal)
{
    <div style="position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:9999;background:rgba(0,0,0,0.5);display:flex;align-items:center;justify-content:center;">
        <div class="card flex-center" style="position:relative;min-width:320px;">
            <VideoCall ChatId="@id" OnClose="CloseCallModal" />
        </div>
    </div>
}

@code {
    [Parameter]
    public string id { get; set; }
    [Inject]
    private ChatMessagePageService chatMessagePageService { get; set; }
    private bool IsLoaded { get; set; } = false;

    private bool showCallModal = false;

    void OpenCallModal()
    {
        showCallModal = true;
    }

    void CloseCallModal()
    {
        showCallModal = false;
    }

    protected override async void OnInitialized()
    {
        chatMessagePageService.OnDataChanged += Refresh;
        await chatMessagePageService.EstablishConnection(id);
        base.OnInitialized();
        IsLoaded = true;
        Refresh();
    }
    private void Refresh()
    {
        StateHasChanged();
    }
}