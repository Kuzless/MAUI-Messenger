@page "/usersettings"
@using System.IO
@using MyMessenger.Maui.Services.PageService

<div class="card" style="max-width:700px;margin:2rem auto;">
    <h2 class="text-accent" style="margin-bottom:1.5rem;">Settings</h2>
    @if (IsLoaded)
    {
        <div class="flex-center gap-2" style="flex-wrap:wrap;">
            <div style="flex:1;min-width:220px;max-width:260px;">
                <img src="@userSettings.user.Image" alt="Avatar" style="width:100%;border-radius:var(--border-radius);box-shadow:var(--shadow);" />
            </div>
            <div style="flex:2;min-width:220px;">
                <label for="name" style="font-weight:600;">Name:</label>
                <input id="name" @bind="@userSettings.user.Name" class="form-control" style="margin-bottom:1rem;" />
                <label for="phoneNumber" style="font-weight:600;">Phone Number:</label>
                <input id="phoneNumber" @bind="@userSettings.user.PhoneNumber" class="form-control" style="margin-bottom:1rem;" />
                <div class="flex-center" style="gap:1rem;">
                    <label style="flex:1; margin-bottom:0;">
                        <input type="file" accept="image/*" style="display:none;" @OnChange="userSettings.DownloadImage" />
                        <span class="btn-main" style="width:100%;display:inline-block;cursor:pointer;text-align:center;">Select Image</span>
                    </label>
                    <button @onclick="userSettings.UpdateInfo" class="btn-main" style="flex:1;">Save</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="flex-center" style="min-height:120px;">
            <h3 class="muted">Loading...</h3>
        </div>
    }
</div>

@code {
    [Inject] private UserSettingsService userSettings { get; set; }
    private bool IsLoaded { get; set; } = false;

    protected override void OnInitialized()
    {
        userSettings.OnDataChanged += Refresh;
        base.OnInitialized();
        IsLoaded = true;
    }
    private void Refresh()
    {
        StateHasChanged();
    }
}
