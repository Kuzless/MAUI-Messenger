@page "/messages"
@using MyMessenger.Application.DTO.MessagesDTOs
@using MyMessenger.Application.DTO
@using MyMessenger.Maui.Services
@using BlazorPagination
@using MyMessenger.Maui.Components.Pages.ParametersPages
@using MyMessenger.Maui.Services.PageService
@inject MessageService messageService

<h1>Your Messages</h1>
@if (IsLoaded)
{
    <button @onclick="messagePageService.OpenPopup">Parameters</button>

    <SfGrid DataSource="@messagePageService.MessagesList">
        <GridColumns>
            <GridColumn Field="@nameof(MessageDTO.Text)" HeaderText="Message"></GridColumn>
            <GridColumn Field="@nameof(MessageDTO.DateTime)" HeaderText="Time"></GridColumn>
            <GridColumn>
                <Template>
                    <button @onclick="() => messagePageService.DeleteMessage((MessageDTO)context)">Delete</button>
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
    <BlazorPager CurrentPage="@messagePageService.currentPage"
                 PageCount="@messagePageService.numberOfPages"
                 OnPageChanged="(async x => { messagePageService.currentPage = x; messagePageService.ChangePage(); })"
                 ShowFirstLast="false"
                 ShowPageNumbers="true"
                 VisiblePages=messagePageService.pageSize />
    if (messagePageService.isWindowVisible)
    {
        <GenericParameters Columns="@messagePageService.Columns" CurrentPage="@messagePageService.CurrentPage" OnSave="@messagePageService.SaveChanges" OnClose="@messagePageService.ClosePopup"></GenericParameters>
    }
}
else
{
    <br>
    <h3>Loading...</h3>
}

@code {
    [Inject] private MessagePageService messagePageService { get; set; }
    private bool IsLoaded { get; set; } = false;

    protected override void OnInitialized()
    {
        messagePageService.OnDataChanged += Refresh;
        base.OnInitialized();
        IsLoaded = true;
    }
    private void Refresh()
    {
        StateHasChanged();
    }
}

