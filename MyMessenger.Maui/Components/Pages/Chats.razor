@page "/chats"
@using MyMessenger.Maui.Models
@using MyMessenger.Maui.Services
@using MyMessenger.Maui.Components.Pages.ParametersPages
@using BlazorPagination
@using MyMessenger.Maui.Services.PageService
@inject NavigationManager NavigationManager

<h1>Chats</h1>
@if (IsLoaded)
{
    <button @onclick="chatPageService.OpenPopup">Parameters</button>

    <SfGrid DataSource="@chatPageService.ChatsList">
        <GridColumns>
            <GridColumn Field="@nameof(ChatDTO.Id)" HeaderText="Id"></GridColumn>
            <GridColumn Field="@nameof(ChatDTO.Name)" HeaderText="Name"></GridColumn>
            <GridColumn>
                <Template>
                    <button @onclick="() => GoToChat(((ChatDTO)context).Id)">Open</button>
                    <button @onclick="() => chatPageService.ShowInviteToChat((ChatDTO)context)">Invite</button>
                    <button @onclick="() => chatPageService.LeaveChat(((ChatDTO)context).Id)">Leave</button>
                    <button @onclick="() => chatPageService.DeleteChat(((ChatDTO)context).Id)">Delete</button>
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>


    <button @onclick="chatPageService.ChangeAddChatVisibility">Add</button>

    @if (chatPageService.showAddMenu)
    {
        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: grey; padding: 20px; border-block-color: black;">
            <label for="chatName">Chat Name:</label>
            <input type="text" id="chatName" @bind="chatPageService.newChatName" required />
            <div style="margin-top: 10px;">
                <button @onclick="chatPageService.AddChat">Save</button>
            </div>
        </div>
    }
    @if (chatPageService.showInviteMenu)
    {
        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: grey; padding: 20px; border-block-color: black;">
            <label for="userName">Username:</label>
            <input type="text" id="userName" @bind="chatPageService.userNameToInvite" required />
            <div style="margin-top: 10px;">
                <button @onclick="chatPageService.InviteToChat">Invite</button>
                <button @onclick="chatPageService.CloseInviteMenu">Close</button>
            </div>
        </div>
    }
    <BlazorPager CurrentPage="@chatPageService.currentPage"
                 PageCount="@chatPageService.numberOfPages"
                 OnPageChanged="(async x => { chatPageService.currentPage = x; chatPageService.ChangePage(); })"
                 ShowFirstLast="false"
                 ShowPageNumbers="true"
                 VisiblePages=chatPageService.pageSize />

    if (chatPageService.isWindowVisible)
    {
        <GenericParameters Columns="@chatPageService.Columns" CurrentPage="@chatPageService.CurrentPage" OnSave="@chatPageService.SaveChanges" OnClose="@chatPageService.ClosePopup"></GenericParameters>
    }
}
else
{
    <br>
    <h3>Loading...</h3>
}

@code {
    [Inject] private ChatPageService chatPageService { get; set; }
    private bool IsLoaded = false;
    protected override void OnInitialized()
    {
        chatPageService.OnDataChanged += Refresh;
        base.OnInitialized();
        IsLoaded = true;
    }

    private void Refresh()
    {
        StateHasChanged();
    }
    private void GoToChat(int id)
    {
        NavigationManager.NavigateTo($"/chatmessages/{id}");
    }
}
