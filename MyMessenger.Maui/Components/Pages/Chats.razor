@page "/chats"
@using MyMessenger.MApplication.DTO.ChatDTOs
@using MyMessenger.MApplication.DTO
@using MyMessenger.Maui.Services
@using BlazorPagination
@inject ChatService chatService

<h1>Messages</h1>
<button @onclick="ChangeParametersVisibility">Parameters</button>
@if (isWindowVisible)
{
    <div class="window-overlay">
        <div class="window">
            <br />
            <div class="search-bar">
                <h3>Search</h3>
                <input type="text" @bind="CurrentPage.Subs" placeholder="Search..." />
            </div>
            <h3>Sort</h3>
            <div class="radio-group">
                <input type="radio" id="radio" name="radioGroup" checked="true" value="value1" @onclick="() => SortByColumn(0)" />
                <label for="radio1">ChatName</label>
            </div>
            <br />
            <div class="radio-group2">
                <input type="radio" id="radio11" name="radioGroup2" checked="true" value="value1" @onclick="() => { SortType = false; ChangeSortType(); }" />
                <label for="radio11">Asc</label>
                <input type="radio" id="radio22" name="radioGroup2" value="value2" @onclick="() => { SortType = true; ChangeSortType(); }" />
                <label for="radio22">Desc</label>
            </div>
            <br />
            <button @onclick="() => GetAllChats(CurrentPage)">Apply</button>
        </div>
    </div>
}
<SfGrid DataSource="@ChatsList">
    <GridColumns>
        <GridColumn Field="@nameof(ChatDTO.Name)" HeaderText="Message"></GridColumn>
    </GridColumns>
</SfGrid>
<BlazorPager CurrentPage="@currentPage"
             PageCount="@numberOfPages"
             OnPageChanged="(async x => { currentPage = x; ChangePage(); })"
             ShowFirstLast="false"
             ShowPageNumbers="true"
             VisiblePages=pageSize />

@code {
    private IEnumerable<ChatDTO> ChatsList;
    private AllDataRetrievalParametersDTO CurrentPage;
    private bool SortType = false;
    private bool isWindowVisible = false;
    private int numberOfPages;
    private int currentPage;
    private int pageSize;
    protected override void OnInitialized()
    {
        numberOfPages = 1;
        currentPage = 1;
        pageSize = 10;
        CurrentPage = new AllDataRetrievalParametersDTO() { PageNumber = currentPage, PageSize = pageSize, Sort = new Dictionary<string, bool>() { { "Name", false } }, Subs = ""};
        GetAllChats(CurrentPage);
        base.OnInitialized();
    }
    private void SortByColumn(int index)
    {
        CurrentPage.Sort.Clear();
        switch (index)
        {
            case 0:
                CurrentPage.Sort.Add("Name", SortType);
                break;
        }
    }
    private void ChangeSortType()
    {
        var sortRule = CurrentPage.Sort.First();
        CurrentPage.Sort[sortRule.Key] = SortType;
    }
    private void ChangePage()
    {
        CurrentPage.PageNumber = currentPage;
        GetAllChats(CurrentPage);
    }
    private async void GetAllChats(AllDataRetrievalParametersDTO data)
    {
        CurrentPage = data;
        DataForGridDTO<ChatDTO> newdata = await chatService.GetAllMessages(CurrentPage);
        ChatsList = newdata.Data;
        numberOfPages = newdata.NumberOfPages;
        StateHasChanged();
    }
    void ChangeParametersVisibility()
    {
        isWindowVisible = !isWindowVisible;
    }
}
